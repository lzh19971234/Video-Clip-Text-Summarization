# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import proto.get_cutting_pb2 as get__cutting__pb2


class GetVideoAsrServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVideoAsr = channel.unary_unary(
        '/kuaishou.ad.creative.center.algorithm.GetVideoAsrService/GetVideoAsr',
        request_serializer=get__cutting__pb2.VideoAsrRequest.SerializeToString,
        response_deserializer=get__cutting__pb2.VideoAsrResponse.FromString,
        )


class GetVideoAsrServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVideoAsr(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GetVideoAsrServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVideoAsr': grpc.unary_unary_rpc_method_handler(
          servicer.GetVideoAsr,
          request_deserializer=get__cutting__pb2.VideoAsrRequest.FromString,
          response_serializer=get__cutting__pb2.VideoAsrResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kuaishou.ad.creative.center.algorithm.GetVideoAsrService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
